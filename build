#!/bin/bash

KERNEL_VERSION_HEAD=6
KERNEL_VERSION=$KERNEL_VERSION_HEAD.4.12
KERNEL_ARCHIVE=linux-$KERNEL_VERSION.tar.xz

BASH_VERSION=5.2
BASH_ARCHIVE=bash-$BASH_VERSION.tar.gz

if [ "$1" = "download" ] || [ "$2" = "download" ]; then
    rm -r downloads
fi

mkdir -p downloads
cd downloads
    if [ ! -f $KERNEL_ARCHIVE ]; then
        wget https://mirrors.edge.kernel.org/pub/linux/kernel/v$KERNEL_VERSION_HEAD.x/$KERNEL_ARCHIVE
    fi

    if [ ! -f $BASH_ARCHIVE ]; then
        wget https://ftp.gnu.org/gnu/bash/$BASH_ARCHIVE
    fi
cd ..

if [ "$1" = "base" ] || [ "$2" = "base" ]; then
    rm -f -r src
    mkdir -p src
    cd src
        tar -xf ../downloads/$KERNEL_ARCHIVE
        tar -xf ../downloads/$BASH_ARCHIVE
        cd linux-$KERNEL_VERSION
            make defconfig
            if [ "$2" = "menu" ]; then
                make menuconfig
            fi
            make -j8 || exit
            cp arch/x86/boot/bzImage ../../
        cd ..
        cd bash-$BASH_VERSION
            ./configure --enable-static-link
            make -j8 || exit
            cp bash ../
        cd ..
    cd ..
fi

rm -f -r initrd*
mkdir -p initrd initrd/bin
cd initrd/bin
    for script in $(find ../../SBinary -name *.asm); do
        nasm -f elf64 $script -o tmp || exit
        ld tmp -o $(basename $script .asm) || exit
        rm tmp
    done
    for script in $(find ../../SBinary -name *.c); do
        gcc -static $script -o $(basename $script .c) || exit
    done
    for script in $(find ../../SBinary -name *.cpp); do
        g++ -static $script -o $(basename $script .cpp) || exit
    done
    for script in $(find ../../SBinary -name *.go); do
        go build $script || exit
    done
cd ..

cd initrd
    cp ../src/bash bin

    cp -f ../SBinary/bin/* bin
    mv bin/init .

    tree
    find . | cpio -o -H newc > ../initrd.img
cd ..

if [ "$1" = "run" ] || [ "$2" = "run" ]; then
    unset GTK_PATH
    qemu-system-x86_64 -kernel bzImage -initrd initrd.img -append "quiet"
fi
